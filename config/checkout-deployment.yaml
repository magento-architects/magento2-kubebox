# The following code is for creating single-instance of magento2 Deployment and Service
apiVersion: v1
kind: Service
metadata:
  name: magento2-checkout
  labels:
    app: magento2-checkout
spec:
  ports:
  - port: 80
    nodePort: 30102
  selector:
    app: magento2-checkout
    tier: frontend
  type: NodePort #any service of type NodePort can be accessed over that IP address
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-config-checkout
data:
  nginx.conf: |
    events {
    }
    http {
      upstream fastcgi_backend {
        server 127.0.0.1:9000;
      }

      server {
        listen 80 default_server;
        listen [::]:80 default_server;

        server_name _;

        set $MAGE_ROOT /var/www/html/checkout;
        include /var/www/html/checkout/nginx.conf.sample;
      }
    }
---
#This it to deploy magento2 container to Kubernetes
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: magento2-checkout
  labels:
    app: magento2-checkout
spec:
  selector:
    matchLabels:
      app: magento2-checkout
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: magento2-checkout
        tier: frontend
    spec:
      containers:
      - name: magento2-checkout
        image: shiftedreality/magento-kubernetes-components-php:7.1-fpm
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        volumeMounts:
        - name: code
          mountPath: /var/www/html
      - name: nginx
        image: nginx:1.9
        volumeMounts:
        - name: code
          mountPath: /var/www/html
        - name: nginx-config-checkout-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: code
        hostPath:
          path: {{PWD}}/sources
      - name: nginx-config-checkout-volume
        configMap:
          name: nginx-config-checkout
